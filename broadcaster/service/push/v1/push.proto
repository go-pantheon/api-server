syntax = "proto3";

package broadcaster.service.push.v1;

import "google/api/annotations.proto";

option go_package = "api/server/broadcaster/service/push/v1;servicev1";

// Broadcaster service
// Open to the server cluster
// Provide HTTP and gRPC interfaces
service PushService {
	rpc Push (PushRequest) returns (PushResponse) {
		option (google.api.http) = {
			post: "/push"
			body: "*"
		};
	};
	rpc Multicast (MulticastRequest) returns (MulticastResponse) {
		option (google.api.http) = {
			post: "/multicast"
			body: "*"
		};
	};
	rpc Broadcast (BroadcastRequest) returns (BroadcastResponse) {
		option (google.api.http) = {
			post: "/broadcast"
			body: "*"
		};
	};
}

message PushRequest {
  repeated PushBody bodies = 1;
  string color = 2;
  int64 sid = 3;
  int64 uid = 4;
}

message PushResponse {
  bool pushed = 1;
}

message MulticastRequest {
  repeated PushBody bodies = 1;
  repeated int64 uids = 2;
  string color = 3;
}

message MulticastResponse {
  repeated int64 pushed_uids = 1;
}

message BroadcastRequest {
  repeated PushBody bodies = 1;
  string color = 2;
  int64 sid = 3;
}

message BroadcastResponse {
}

message PushMessage {
  repeated PushBody bodies = 1;
  repeated int64 uids = 2;
  bool broadcast = 3;
  string color = 4;
  int64 sid = 5;
}

message PushBody {
  bytes data = 1; // Serialized bytes of the cs/sc protocol in the message
  uint64 data_version = 2; // Data version number
  int64 obj = 3; // Module object ID, according to the business agreement to pass the corresponding object ID
  int32 mod = 4; // Module ID, globally unique
  int32 seq = 5; // Module message ID, unique within the module
}
