syntax = "proto3";

package gate.service.push.v1;

import "google/api/annotations.proto";

option go_package = "api/server/gate/service/push/v1;servicev1";

// TCP Gate service
// Open to the server cluster
// Provide HTTP and gRPC interfaces
service PushService {
	rpc Push (PushRequest) returns (PushResponse) {
		option (google.api.http) = {
			post: "/push"
			body: "*"
		};
	};
	rpc Multicast (MulticastRequest) returns (MulticastResponse) {
		option (google.api.http) = {
			post: "/multicast"
			body: "*"
		};
	};
	rpc Broadcast (BroadcastRequest) returns (BroadcastResponse) {
		option (google.api.http) = {
			post: "/broadcast"
			body: "*"
		};
	};
}

message PushRequest {
  int64 uid = 1;
  repeated PushBody bodies = 2;
}

message PushResponse {
}

message MulticastRequest {
  repeated int64 uid = 1;
  repeated PushBody bodies = 2;
}

message MulticastResponse {
}

message BroadcastRequest {
  repeated PushBody bodies = 1;
}
message BroadcastResponse {
}

message PushBody {
  bytes data = 1; // Message body proto bytes array
  int64 obj = 2; // Object ID, according to the business agreement
  int32 mod = 3; // Module ID, globally unique
  int32 seq = 4; // Message ID within the module, unique within the module
}
