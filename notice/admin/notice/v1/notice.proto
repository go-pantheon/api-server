syntax = "proto3";

package notice.admin.notice.v1;

import "google/api/annotations.proto";

option go_package = "api/server/notice/admin/notice/v1;adminv1";

// Notice admin service
// Open to the server cluster
// Provide gRPC interfaces
service NoticeAdmin {
	// Query notice page list
	rpc GetList (GetListRequest) returns (GetListResponse) {
		option (google.api.http) = {
			get: "/admin/notices/list"
		};
	};
	// Query notice by id
	rpc GetById (GetByIdRequest) returns (GetByIdResponse) {
		option (google.api.http) = {
			get: "/admin/notices/{id}"
		};
	};

	// Create notice
	rpc Create (CreateRequest) returns (CreateResponse) {
		option (google.api.http) = {
			post: "/admin/notices/create"
			body: "*"
		};
	};

	// Update notice
	rpc Update (UpdateRequest) returns (UpdateResponse) {
		option (google.api.http) = {
			put: "/admin/notices/{id}"
			body: "*"
		};
	};

	// Delete notice
	rpc Delete (DeleteRequest) returns (DeleteResponse) {
		option (google.api.http) = {
			delete: "/admin/notices/{id}"
		};
	};
}

message GetListRequest {
	int64 page = 1;
	int64 page_size = 2;
}

message GetListResponse {
	int32 code = 1;
	string message = 2;

	repeated NoticeProto list = 3;
	int64 total = 4;
}

message GetByIdRequest {
	int64 id = 1;
}

message GetByIdResponse {
	int32 code = 1;
	string message = 2;

	NoticeProto item = 3;
}

message CreateRequest {
	NoticeProto item = 1;
}

message CreateResponse {
	int32 code = 1;
	string message = 2;
}


message UpdateRequest {
	int64 id = 1;
	NoticeProto item = 2;
}

message UpdateResponse {
	int32 code = 1;
	string message = 2;
}


message DeleteRequest {
	int64 id = 1;
}

message DeleteResponse {
	int32 code = 1;
	string message = 2;
}


message NoticeProto {
	int64 id = 1;
	string title = 2; // Title
	string content = 3; // Content
	int64 sort = 4; // Sort, the larger the number, the higher the position
	int64 start_time = 5; // Start display time
	int64 end_time = 6; // End display time
	int64 created_time = 7; // Create time
	int64 updated_time = 8; // Update time
}
