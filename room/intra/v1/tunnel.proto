syntax = "proto3";

package room.intra.v1;

option go_package = "api/server/room/intra/v1;intrav1";

// Room tunnel stream service
// Open to the server cluster
// Provide gRPC interfaces
service TunnelService {
  rpc Tunnel(stream TunnelRequest) returns (stream TunnelResponse) {}
}

message TunnelRequest {
  bytes data = 1; // Serialized bytes of the cs/sc protocol in the message
  uint64 data_version = 2; // Data version number
  int64 obj = 3; // Module object ID, according to the business agreement to pass the corresponding object ID
  int32 mod = 4; // Module ID, globally unique
  int32 seq = 5; // Module message ID, unique within the module
}

message TunnelResponse {
  bytes data = 1; // Serialized bytes of the cs/sc protocol in the message
  uint64 data_version = 2; // Data version number
  int64 obj = 3; // Module object ID, according to the business agreement to pass the corresponding object ID
  int32 mod = 4; // Module ID, globally unique
  int32 seq = 5; // Module message ID, unique within the module
}
